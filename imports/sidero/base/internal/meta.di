// generated by tools/internal_meta do not modify
module sidero.base.internal.meta;

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) scope @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) scope @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) scope nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) scope nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) scope nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) scope nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc pure del) scope nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc pure del) nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc pure del) scope nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc pure del) nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) del) scope;
    int opApply(scope int delegate(ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc pure del) scope nothrow @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) scope @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) scope nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc pure del) scope nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) del);
    int opApply(scope int delegate(ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
    int opApply(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) nothrow @nogc pure del) nothrow @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) del);
    int opApply(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc pure del) nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) scope @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) scope nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc pure del) scope nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del) scope;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) scope pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) scope @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) scope @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) scope nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) scope nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) scope nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc pure del) scope nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:false, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) del);
    int opApplyReverse(scope int delegate(ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @nogc pure del) @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow pure del) nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) nothrow @nogc pure del) nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) del);
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) pure del) pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc del) @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @nogc pure del) @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow del) nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow pure del) nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc del) nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) nothrow @nogc pure del) nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:false, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) @safe @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:false, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) @safe nothrow pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:false, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc pure del) scope @system nothrow @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) scope @safe nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc pure del) @system nothrow @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) @safe nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc pure del) scope @system nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) scope @safe nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType:void, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc pure del) @system nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) @safe nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApply(scope int delegate(ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc pure del) scope @system nothrow @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) scope @safe nothrow @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc pure del) scope @system nothrow @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc pure del) scope @safe nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApply", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApply(scope int delegate(ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @system nothrow @nogc pure del) @system nothrow @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApply(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) @safe nothrow @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc pure del) @system nothrow @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApply(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc pure del) @safe nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:false) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc pure del) scope @system nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) scope @safe nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) scope @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) scope @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) scope @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) scope @system @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) scope @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) scope @system nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) scope @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc pure del) scope @system nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) scope @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) scope @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) scope @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) scope @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) scope @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) scope @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) scope @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc pure del) scope @safe nothrow @nogc pure;
}

mixin template OpApplyCombos(ValueType, KeyType, string Name:"opApplyReverse", bool UseSafe:true, bool UseNothrow:true, bool UseNogc:true, bool UsePure:true, bool UseStatic:true) {
    int opApplyReverse(scope int delegate(ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @system nothrow @nogc pure del) @system nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref ValueType) @safe nothrow @nogc pure del) @safe nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system del) @system;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system pure del) @system pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc del) @system @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system @nogc pure del) @system @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow del) @system nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow pure del) @system nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc del) @system nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @system nothrow @nogc pure del) @system nothrow @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe del) @safe;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe pure del) @safe pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc del) @safe @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe @nogc pure del) @safe @nogc pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow del) @safe nothrow;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow pure del) @safe nothrow pure;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc del) @safe nothrow @nogc;
    int opApplyReverse(scope int delegate(ref KeyType, ref ValueType) @safe nothrow @nogc pure del) @safe nothrow @nogc pure;
}

