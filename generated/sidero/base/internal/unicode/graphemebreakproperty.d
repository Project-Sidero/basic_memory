module sidero.base.internal.unicode.graphemebreakproperty;
// Generated do not modify

export extern(C) bool sidero_utf_lut_isMemberOfGraphemePrepend(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"0000060000000606000006DD000006DE0000070F000007100000089000000892000008E2000008E300000D4E00000D4F000110BD000110BE000110CD000110CE000111C2000111C4000113D1000113D20001193F00011940000119410001194200011A3A00011A3B00011A8400011A8A00011D4600011D4700011F0200011F03";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeCR(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"0000000D0000000E";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeLF(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"0000000A0000000B";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeControl(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"000000000000000A0000000B0000000D0000000E000000200000007F000000A0000000AD000000AE0000061C0000061D0000180E0000180F0000200B0000200C0000200E00002010000020280000202F00002060000020700000FEFF0000FF000000FFF00000FFFC00013430000134400001BCA00001BCA40001D1730001D17B000E0000000E0020000E0080000E0100000E01F0000E1000";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeExtend(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"0000030000000370000004830000048A00000591000005BE000005BF000005C0000005C1000005C3000005C4000005C6000005C7000005C8000006100000061B0000064B000006600000067000000671000006D6000006DD000006DF000006E5000006E7000006E9000006EA000006EE0000071100000712000007300000074B000007A6000007B1000007EB000007F4000007FD000007FE000008160000081A0000081B000008240000082500000828000008290000082E000008590000085C00000897000008A0000008CA000008E2000008E3000009030000093A0000093B0000093C0000093D00000941000009490000094D0000094E000009510000095800000962000009640000098100000982000009BC000009BD000009BE000009BF000009C1000009C5000009CD000009CE000009D7000009D8000009E2000009E4000009FE000009FF00000A0100000A0300000A3C00000A3D00000A4100000A4300000A4700000A4900000A4B00000A4E00000A5100000A5200000A7000000A7200000A7500000A7600000A8100000A8300000ABC00000ABD00000AC100000AC600000AC700000AC900000ACD00000ACE00000AE200000AE400000AFA00000B0000000B0100000B0200000B3C00000B3D00000B3E00000B4000000B4100000B4500000B4D00000B4E00000B5500000B5800000B6200000B6400000B8200000B8300000BBE00000BBF00000BC000000BC100000BCD00000BCE00000BD700000BD800000C0000000C0100000C0400000C0500000C3C00000C3D00000C3E00000C4100000C4600000C4900000C4A00000C4E00000C5500000C5700000C6200000C6400000C8100000C8200000CBC00000CBD00000CBF00000CC100000CC200000CC300000CC600000CC900000CCA00000CCE00000CD500000CD700000CE200000CE400000D0000000D0200000D3B00000D3D00000D3E00000D3F00000D4100000D4500000D4D00000D4E00000D5700000D5800000D6200000D6400000D8100000D8200000DCA00000DCB00000DCF00000DD000000DD200000DD500000DD600000DD700000DDF00000DE000000E3100000E3200000E3400000E3B00000E4700000E4F00000EB100000EB200000EB400000EBD00000EC800000ECF00000F1800000F1A00000F3500000F3600000F3700000F3800000F3900000F3A00000F7100000F7F00000F8000000F8500000F8600000F8800000F8D00000F9800000F9900000FBD00000FC600000FC70000102D000010310000103200001038000010390000103B0000103D0000103F000010580000105A0000105E000010610000107100001075000010820000108300001085000010870000108D0000108E0000109D0000109E0000135D000013600000171200001716000017320000173500001752000017540000177200001774000017B4000017B6000017B7000017BE000017C6000017C7000017C9000017D4000017DD000017DE0000180B0000180E0000180F000018100000188500001887000018A9000018AA000019200000192300001927000019290000193200001933000019390000193C00001A1700001A1900001A1B00001A1C00001A5600001A5700001A5800001A5F00001A6000001A6100001A6200001A6300001A6500001A6D00001A7300001A7D00001A7F00001A8000001AB000001ACF00001B0000001B0400001B3400001B3E00001B4200001B4500001B6B00001B7400001B8000001B8200001BA200001BA600001BA800001BAE00001BE600001BE700001BE800001BEA00001BED00001BEE00001BEF00001BF400001C2C00001C3400001C3600001C3800001CD000001CD300001CD400001CE100001CE200001CE900001CED00001CEE00001CF400001CF500001CF800001CFA00001DC000001E000000200C0000200D000020D0000020F100002CEF00002CF200002D7F00002D8000002DE000002E000000302A00003030000030990000309B0000A66F0000A6730000A6740000A67E0000A69E0000A6A00000A6F00000A6F20000A8020000A8030000A8060000A8070000A80B0000A80C0000A8250000A8270000A82C0000A82D0000A8C40000A8C60000A8E00000A8F20000A8FF0000A9000000A9260000A92E0000A9470000A9520000A9530000A9540000A9800000A9830000A9B30000A9B40000A9B60000A9BA0000A9BC0000A9BE0000A9C00000A9C10000A9E50000A9E60000AA290000AA2F0000AA310000AA330000AA350000AA370000AA430000AA440000AA4C0000AA4D0000AA7C0000AA7D0000AAB00000AAB10000AAB20000AAB50000AAB70000AAB90000AABE0000AAC00000AAC10000AAC20000AAEC0000AAEE0000AAF60000AAF70000ABE50000ABE60000ABE80000ABE90000ABED0000ABEE0000FB1E0000FB1F0000FE000000FE100000FE200000FE300000FF9E0000FFA0000101FD000101FE000102E0000102E1000103760001037B00010A0100010A0400010A0500010A0700010A0C00010A1000010A3800010A3B00010A3F00010A4000010AE500010AE700010D2400010D2800010D6900010D6E00010EAB00010EAD00010EFC00010F0000010F4600010F5100010F8200010F8600011001000110020001103800011047000110700001107100011073000110750001107F00011082000110B3000110B7000110B9000110BB000110C2000110C30001110000011103000111270001112C0001112D0001113500011173000111740001118000011182000111B6000111BF000111C0000111C1000111C9000111CD000111CF000111D00001122F0001123200011234000112380001123E0001123F0001124100011242000112DF000112E0000112E3000112EB00011300000113020001133B0001133D0001133E0001133F00011340000113410001134D0001134E0001135700011358000113660001136D0001137000011375000113B8000113B9000113BB000113C1000113C2000113C3000113C5000113C6000113C7000113CA000113CE000113D1000113D2000113D3000113E1000113E30001143800011440000114420001144500011446000114470001145E0001145F000114B0000114B1000114B3000114B9000114BA000114BB000114BD000114BE000114BF000114C1000114C2000114C4000115AF000115B0000115B2000115B6000115BC000115BE000115BF000115C1000115DC000115DE000116330001163B0001163D0001163E0001163F00011641000116AB000116AC000116AD000116AE000116B0000116B80001171D0001171E0001171F000117200001172200011726000117270001172C0001182F00011838000118390001183B00011930000119310001193B0001193F0001194300011944000119D4000119D8000119DA000119DC000119E0000119E100011A0100011A0B00011A3300011A3900011A3B00011A3F00011A4700011A4800011A5100011A5700011A5900011A5C00011A8A00011A9700011A9800011A9A00011C3000011C3700011C3800011C3E00011C3F00011C4000011C9200011CA800011CAA00011CB100011CB200011CB400011CB500011CB700011D3100011D3700011D3A00011D3B00011D3C00011D3E00011D3F00011D4600011D4700011D4800011D9000011D9200011D9500011D9600011D9700011D9800011EF300011EF500011F0000011F0200011F3600011F3B00011F4000011F4300011F5A00011F5B000134400001344100013447000134560001611E0001612A0001612D0001613000016AF000016AF500016B3000016B3700016F4F00016F5000016F8F00016F9300016FE400016FE500016FF000016FF20001BC9D0001BC9F0001CF000001CF2E0001CF300001CF470001D1650001D16A0001D16D0001D1730001D17B0001D1830001D1850001D18C0001D1AA0001D1AE0001D2420001D2450001DA000001DA370001DA3B0001DA6D0001DA750001DA760001DA840001DA850001DA9B0001DAA00001DAA10001DAB00001E0000001E0070001E0080001E0190001E01B0001E0220001E0230001E0250001E0260001E02B0001E08F0001E0900001E1300001E1370001E2AE0001E2AF0001E2EC0001E2F00001E4EC0001E4F00001E5EE0001E5F00001E8D00001E8D70001E9440001E94B0001F3FB0001F400000E0020000E0080000E0100000E01F0";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeRegional_Indicator(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"0001F1E60001F200";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeSpacingMark(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeL(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"00001100000011600000A9600000A97D";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeV(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"00001160000011A80000D7B00000D7C700016D6300016D6400016D6700016D6B";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeT(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"000011A8000012000000D7CB0000D7FC";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeLV(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeLVT(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeZWJ(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x"0000200D0000200E";

    ptrdiff_t low, high = Table.length;

    while(low < high) {
        const mid = low + ((high - low) / 2);

        if (against >= Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
    }

    const pos = high - 1;
    return (pos & 1) == 0;
}
