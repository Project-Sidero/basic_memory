module sidero.base.internal.unicode.graphemebreakproperty;
// Generated do not modify
import sidero.base.containers.set.interval;

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemePrepend = cast(dchar[])x"0000060000000605000006DD000006DD0000070F0000070F0000089000000891000008E2000008E200000D4E00000D4E000110BD000110BD000110CD000110CD000111C2000111C3000113D1000113D10001193F0001193F000119410001194100011A3A00011A3A00011A8400011A8900011D4600011D4600011F0200011F02";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemePrepend(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemePrepend.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemePrepend[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemePrepend[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemePrepend_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemePrepend);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeCR = cast(dchar[])x"0000000D0000000D";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeCR(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeCR.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeCR[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeCR[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeCR_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeCR);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeLF = cast(dchar[])x"0000000A0000000A";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeLF(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeLF.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeLF[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeLF[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeLF_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeLF);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeControl = cast(dchar[])x"00000000000000090000000B0000000C0000000E0000001F0000007F0000009F000000AD000000AD0000061C0000061C0000180E0000180E0000200B0000200B0000200E0000200F000020280000202E000020600000206F0000FEFF0000FEFF0000FFF00000FFFB000134300001343F0001BCA00001BCA30001D1730001D17A000E0000000E001F000E0080000E00FF000E01F0000E0FFF";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeControl(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeControl.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeControl[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeControl[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeControl_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeControl);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeExtend = cast(dchar[])x

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeExtend(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeExtend.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeExtend[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeExtend[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeExtend_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeExtend);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeRegional_Indicator = cast(dchar[])x"0001F1E60001F1FF";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeRegional_Indicator(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeRegional_Indicator.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeRegional_Indicator[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeRegional_Indicator[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeRegional_Indicator_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeRegional_Indicator);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeSpacingMark = cast(dchar[])x

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeSpacingMark(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeSpacingMark.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeSpacingMark[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeSpacingMark[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeSpacingMark_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeSpacingMark);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeL = cast(dchar[])x"000011000000115F0000A9600000A97C";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeL(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeL.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeL[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeL[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeL_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeL);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeV = cast(dchar[])x"00001160000011A70000D7B00000D7C600016D6300016D6300016D6700016D6A";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeV(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeV.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeV[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeV[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeV_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeV);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeT = cast(dchar[])x"000011A8000011FF0000D7CB0000D7FB";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeT(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeT.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeT[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeT[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeT_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeT);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeLV = cast(dchar[])x

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeLV(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeLV.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeLV[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeLV[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeLV_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeLV);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeLVT = cast(dchar[])x

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeLVT(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeLVT.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeLVT[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeLVT[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeLVT_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeLVT);
    return cast(IntervalSet!dchar)Set;
}

static immutable dchar[] Table_sidero_utf_lut_isMemberOfGraphemeZWJ = cast(dchar[])x"0000200D0000200D";

export extern(C) bool sidero_utf_lut_isMemberOfGraphemeZWJ(dchar against) @trusted nothrow @nogc pure {
    ptrdiff_t low, high = Table_sidero_utf_lut_isMemberOfGraphemeZWJ.length / 2;

    while(low < high) {
        const mid = low + (high - low) / 2;
        const start = Table_sidero_utf_lut_isMemberOfGraphemeZWJ[mid << 1], end = Table_sidero_utf_lut_isMemberOfGraphemeZWJ[(mid << 1) | 1];

        if (against >= start && against <= end)
            return true;
        else if (against > end)
            low = mid + 1;
        else if (against < start)
            high = mid;
    }

    return false;
}
export extern(C) IntervalSet!dchar sidero_utf_lut_isMemberOfGraphemeZWJ_Set() @trusted nothrow @nogc {
    static IntervalSet!dchar Set = IntervalSet!dchar.constructCTFE(cast(dstring)Table_sidero_utf_lut_isMemberOfGraphemeZWJ);
    return cast(IntervalSet!dchar)Set;
}
