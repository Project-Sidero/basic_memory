module sidero.base.internal.unicode.derivednormalizationprops;

// Generated do not modify
export extern(C) bool sidero_utf_lut_isFullCompositionExcluded(dchar against) @trusted nothrow @nogc pure {
    static immutable dchar[] Table = cast(dchar[])x

    size_t low, high = Table.length;

    while(low < high) {
        size_t mid = (low + high) / 2;

        if (against > Table[mid])
            low = mid + 1;
        else if (against < Table[mid])
            high = mid;
        else {
            const pos = high - 1;
            return (pos & 1) == 0;
        }
    }

    return false;
}
